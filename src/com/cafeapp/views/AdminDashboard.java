package com.cafeapp.views;

import com.cafeapp.controller.dataStructure.MenuStack;
import com.cafeapp.model.MenuItems;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 23048577_PRANAV_SHARMA 
 * AdminDashboard class provides a graphical user
 * interface (GUI) for managing and displaying menu items in a table format. It
 * integrates with a stack data structure to store and manage menu items.
 */
public class AdminDashboard extends javax.swing.JFrame {

    private DefaultTableModel tableModel;// Table model for displaying menu items
    private LinkedList<MenuItems> menuList;// List to store menu items
    private MenuStack menustack; // Stack data structure for menu items

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
        menuList = new LinkedList();
        menustack = new MenuStack();
    }

    /**
     * Overloaded constructor that initializes the dashboard with a given menu
     * list.
     *
     * @param menuList List of MenuItems to initialize the dashboard with.
     */
    public AdminDashboard(LinkedList<MenuItems> menuList) {
        this();
        this.menuList = new LinkedList(menuList);
        ListDataToStack(menuList);
    }

    /**
     * Loads the menu list into the table view.
     *
     * @param menuList List of MenuItems to be displayed in the table.
     */
    private void loadListToTable(LinkedList<MenuItems> menuList) {
        DefaultTableModel model = (DefaultTableModel) tblforviewitems.getModel();
        // Clear existing rows if needed
        model.setRowCount(0);
        
        for (MenuItems menu : menuList) {
            model.addRow(new Object[]{
                menu.getId(), menu.getName(), menu.getCategory(), menu.getPrice(),
                menu.getDescription(), menu.getCalories()
            });
        }
    }

    /**
     * Pushes all menu items from the list to the stack and updates the table.
     *
     * @param menuList List of MenuItems to be pushed to the stack.
     */
    private void ListDataToStack(List<MenuItems> menuList) {
        for (MenuItems menu : menuList) {

            menustack.push(menu);
            addDataToTable(menu);
        }
    }

    /**
     * Adds a single MenuItem to the table.
     *
     * @param menu The MenuItem to be added to the table.
     */
    private void addDataToTable(MenuItems menu) {
        tableModel = (DefaultTableModel) tblforviewitems.getModel();
        tableModel.addRow(new Object[]{menu.getId(), menu.getName(), menu.getCategory(), menu.getPrice(),
            menu.getDescription(), menu.getCalories()});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblforviewitems = new javax.swing.JTable();
        btnback = new javax.swing.JButton();
        lblforbackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblforviewitems.setBackground(new java.awt.Color(240, 232, 219));
        tblforviewitems.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(145, 79, 38), 1, true));
        tblforviewitems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item Name", "Category", "Price", "Description", "Calories"
            }
        ));
        jScrollPane1.setViewportView(tblforviewitems);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 850, 480));

        btnback.setBackground(new java.awt.Color(204, 255, 255));
        btnback.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        getContentPane().add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 690, 290, 70));

        lblforbackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminviewbackground.jpg"))); // NOI18N
        getContentPane().add(lblforbackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        setVisible(false);
        new Home(menuList).setVisible(true);
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblforbackground;
    private javax.swing.JTable tblforviewitems;
    // End of variables declaration//GEN-END:variables
}
